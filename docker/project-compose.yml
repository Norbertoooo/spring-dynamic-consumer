services:
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  schema-registry:
    image: bitnami/schema-registry
    container_name: schema-registry
    ports:
      - "8084:8081"
    environment:
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://192.168.0.140:30094
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_CLIENT_AUTHENTICATION=NONE

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 3000:3000

  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

  airflow-postgresql:
    container_name: airflow-postgresql
    image: 'bitnami/postgresql:latest'
    environment:
      - POSTGRESQL_DATABASE=bitnami_airflow
      - POSTGRESQL_USERNAME=bn_airflow
      - POSTGRESQL_PASSWORD=bitnami1
    volumes:
      - ./postgresql:/bitnami/postgresql

  airflow-redis:
    container_name: airflow-redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/bitnami

  airflow-worker:
    container_name: airflow-worker
    image: bitnami/airflow:latest
    environment:
      - AIRFLOW_COMPONENT_TYPE=worker
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_WEBSERVER_BASE_URL=airflow
      - AIRFLOW_LOAD_EXAMPLES=yes
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - REDIS_HOST=airflow-redis
    volumes:
      - ./airflow/dags:/opt/bitnami/airflow/dags
      - ./airflow/requirements.txt:/bitnami/python/requirements.txt

  airflow-scheduler:
    container_name: airflow-scheduler
    image: bitnami/airflow:latest
    environment:
      - AIRFLOW_COMPONENT_TYPE=scheduler
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_LOAD_EXAMPLES=yes
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - REDIS_HOST=airflow-redis
    volumes:
      - ./airflow/dags:/opt/bitnami/airflow/dags
      - ./airflow/requirements.txt:/bitnami/python/requirements.txt

  airflow:
    container_name: airflow
    image: bitnami/airflow:latest
    environment:
      - AIRFLOW_FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW_SECRET_KEY=a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_PASSWORD=bitnami123
      - AIRFLOW_USERNAME=user
      - AIRFLOW_EMAIL=user@example.com
      - AIRFLOW_DATABASE_HOST=airflow-postgresql
      - REDIS_HOST=airflow-redis
    ports:
      - '8085:8080'
    volumes:
      - ./airflow/dags:/opt/bitnami/airflow/dags
      - ./airflow/requirements.txt:/bitnami/python/requirements.txt

  oracle-db:
    container_name: oracle-db
    image: gvenzl/oracle-free:latest-faststart
    environment:
      - ORACLE_PASSWORD=sys_admin_123
    ports:
      - "1521:1521"
    healthcheck:
      test: [ "CMD", "healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
      start_interval: 5s
      # Mount a local SQL file to initialize your schema at startup
    volumes:
      - ./oracle/init.sql:/container-entrypoint-initdb.d/my-init.sql:ro

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - 8086:8080
      - 50000:50000
    volumes:
      - ./jenkins-home:/var/jenkins_home

networks:
  default:
    driver: bridge